#########################################
############ VIM CHEAT SHEET ############
#########################################


#########################################
Basic Commands
#########################################

:e + filename: open file in current buffer
:w: write file in current buffer
:wall: write all files in all buffers
:q: quit
:q!: force quit (without saving)
:!: bash command


#########################################
Motion Commands (:help motion.txt)
#########################################

h,j,k,l: left, down, up, right

0: beginning of line
$: end of line

w,W,e,E: forward word movement
b,B,ge,gE: backward word movement

f,F,t,T: move to the character
;: go to next occurance
,: got prev occurance

CTRL + f: scroll full page up
CTRL + b: scroll full page down
CTRL + u: scroll half page up
CTRL + d: scroll half page down

H: jump to head line of screen
M: jump to middle line of screen
L: jump to last line of screen

gg: jump to top line of buffer
G: jump to bottom line of buffer
<line-number>+G: jump to line

]]: jump to next curly brace in column 0 at beginning of function
[[: jump to previous curly brace in column 0 at beginning of function
][: jump to next curly brace in column 0 at end of function
[]: jump to previous curly brace in column 0 at end of function

%: jump to matching curly brace (extend with matchit.vim)

zt: redraw current line at top of window
zz: redraw current line at middle of window
zb: redraw current line at bottom of window

zl: scroll text horiz right
zh: scroll text horiz left
zL: scroll text horiz right half screen
zH: scroll text horiz left half screen
zs: scroll text horiz to position cursor at left side of screen
ze: scroll text horiz to position cursor at right side of screen


""""""""""""""""""""""""""""""""""""""
Marks (:help marks)
""""""""""""""""""""""""""""""""""""""
:marks: view what marks are currently in system
m + register: mark current line
' + register: go to line of mark
` + register: go to mark itself
' + ': go to previous location line
` + `: go to previous location itself


#########################################
Search & Replace Commands
#########################################

/: regex search forward
?: regex search backward
/\<searchterm\>: bounded regex search forward
?\<searchterm\>: bounded regex search backward

*: search current word forward by bounded regex
#: search current word backward by bounded regex

g*: search current word forward by regex
g#: search current word backward by regex

n: next instance of match
N: previous instance of match

:s/<pattern>/<sub>/g: substitute pattern matches in line with sub
:s/<pattern>/<sub>/ge: substitute pattern matches with in line sub (no errors if pattern not found)
:s/<pattern>/<sub>/gc: substitute pattern matches with in line sub (confirm before making change)

:%s/<pattern>/<sub>/g: substitute pattern matches in file with sub
:%s/<pattern>/<sub>/ge: substitute pattern matches with in file sub (no errors if pattern not found)
:%s/<pattern>/<sub>/gc: substitute pattern matches with in file sub (confirm before making change)

&: repeat last substitution command


#########################################
Edit Commands
#########################################

.: repeat last change

u: undo last change

i: insert mode at current cursor position
I: insert mode at beginning of line
a: insert mode after current cursor position
A: insert mode at end of line
o: insert mode line below
O: insert mode line above

x: deletes character under cursor
X: deletes character before cursor
dw: delete word
de: delete to end of word
dd: delete current line

cw: change word
C: change to end of line

R: replace
r: replace single character

s: substitute
S: substitute line from beginning of text

yw: yank word
yy: yank line
Y: Yank line

p: put after cursor
P: put before cursor

J: join line with space
gJ: join line without space

CTRL + n: open autocomplete dropdown

:[range]/g/<pattern>/cmd: execute command on each line matching pattern
:[range]/g!/<pattern>/cmd: execute command on each line NOT matching pattern

==: format indent selected lines
<<: indent left
>>: indent right

CTRL + a: increment integer by 1 (can be used anywhere on line)
CTRL + x: decrement integer by 1 (can be used anywhere on line)

gu: make lowercase
gU: make uppercase
g~: swap case

guu: make line lowercase
gUU: make line uppercase
g~: swap line case

!: filter lines through external program


#########################################
Text Objects
#########################################

<number><command><text object or motion>: structure of editing a command

daw: delete word (including surrounding whitespace)
diw: delete inner word

das: delete sentence (including trailing whitespace)
dis: delete inner sentence

dap: delete paragraph (including trailing whitespace)
dip: delete inner paragraph

"""""""""""""""""""""""""""""""""""""""""
Strings (command default to first occurance on line)
"""""""""""""""""""""""""""""""""""""""""

da": delete double quoted string
di": delete inner double quoted string

da': delete single quoted string
di': delete inner single quoted string

da`: delete back quoted string "aksdf"
di`: delete single back quoted string

"""""""""""""""""""""""""""""""""""""""""
Parenthesis/Brackets/Braces/Tags
"""""""""""""""""""""""""""""""""""""""""

da): delete parenthesized block
di): delete inner parenthesized block

da]: delete bracketed block
di]: delete inner bracketed block

da}: delete brace block
di}: delete inner brace block

dat: delete tag block
dit: delete inner tag block


#########################################
Folds
#########################################

zf: define fold


#########################################
Visual Mode
#########################################

v: visual mode by character
V: visual mode by line
CTRL + v: visual block mode
gv: re-select area just selected


#########################################
Switching Files (:help ls) (:help args)
#########################################

:ls: list buffers
:ls!: list buffers including unlisted

:b + filename: switch to buffer
:b + buffer number: switch to buffer
:b#: switch to alternate buffer
CTRL + ^: switch to alternate buffer
:bn: switch to next buffer
:bp: switch to prev buffer
:bfirst: switch to first buffer in list
:blast: switch to last buffer in list

:bd: delete current buffer
:bd + filename: delete buffer
:<low_bound, high_bound>bd: delete range of buffers
:%bd: delete all buffers

:args: open args list of loaded files
:wn: write and go to next in args list
:n: move to next file in args list
:rewind: go back to first file in args list

:bufdo + command: repeat command over every buffer
:tabdo + command: repeat command over every tab
:windo + command: repeat command over every window


#########################################
Windows (:help windows)
#########################################

CTRL + w + o: make current window only visible window

sp: split window horiz
CTRL + w + s: split window horiz

:vsp: split window vert
CTRL + w + v: split window vert

CTRL + w + h,j,k,l: change current window

CTRL + w: cycle current window

CTRL + w + p: change to previous window

CTRL + w + H,J,K,L: move window position

CTRL + w + c: close current window

CTRL + w + x: switches window position


#########################################
Macros
#########################################

q + register: start recording macro and store in register
q: stop recording

number + @ + register: run macro number of times


#########################################
Insert Mode
#########################################

ALL COMMANDS EXECUTED BELOW ARE FROM INSERT MODE!

CTRL + h: delete back one character (backspace)
CTRL + w: delete back one word
CTRL + u: delete back to start of insert mode edits

CTRL + o: execute one command in normal mode


#########################################
Vim Fugitive
#########################################

:Git + git command + %: execute git command on file in current buffer

:Gwrite: stage file in current buffer
:Gread: revert file in current buffer to last checked in version
:Gremove: delete file in current buffer from repo
:Gmove: rename file in current buffer
:Gcommit: open commit window in split window
:Gblame: open blame window in split window

